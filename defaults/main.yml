---
# defaults file for egeneralov.gitlab

domain: gitlab.egeneralov.tk
registry_host: registry.egeneralov.tk
email: eduard@generalov.net
root_password: egeneralov
runners_token: Ru65oNWUzJQ17yh7YwzE
# gitlab_version: 11.11.0-ce.0
gitlab_revision: ce
gitlab_repository: "deb https://packages.gitlab.com/gitlab/gitlab-{{ gitlab_revision }}/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} main"
gitlab_key_url: "https://packages.gitlab.com/gitlab/gitlab-ee/gpgkey"

prometheus:
  enable: false
#   listen_address: 0.0.0.0:9090
  exporters:
    gitlab_monitor: false
    prometheus_monitoring: false
    postgres_exporter: false



restore:
  enabled: false
#   from: /path/to/<timestamp>_gitlab_backup.tar
#   secrets: /path/to/gitlab-secrets.json
  force: false

ldap:
  enabled: false
  host: ldap.egeneralov.tk
  port: 389
  uid: uid
  bind_dn: 'uid=gitlabro,cn=users,cn=compat,dc=egeneralov,dc=tk'
  password: ''
  encryption: 'plain'
  verify_certificates: false
#   ca_file: '/etc/ipa/ca.crt'
  active_directory: false
  allow_username_or_email_login: true
  block_auto_created_users: false
  base: 'dc=egeneralov,dc=tk'
  user_filter: '(objectClass=inetorgperson)'

omniauth:
  enabled: false
  providers: []
#     - {
#       "name": "bitbucket",
#       "app_id": "",
#       "app_secret": "",
#       "url": "https://bitbucket.org/"
#     }

backup:
  enabled: false
  bucket: "egeneralov-gitlab-testing-backup"
  upload_connection: {}
#     provider: 'AWS',
#     region: 'ams3',
#     aws_access_key_id: '',
#     aws_secret_access_key: '',
#     endpoint: 'https://ams3.digitaloceanspaces.com'
  skip:
    - uploads
    - builds
    - artefacts
    - lfs
    - registry
  # weekly, daily, hourly
  schedule: daily
  autoremove: false


letsencrypt:
  enable: false
  contact_emails:
    - "{{ email }}"
  auto_renew: true
  auto_renew_hour: 0
  auto_renew_minute: 30
  auto_renew_day_of_month: "*/4"

nginx:
  client_max_body_size: 100m

runners_clean: false




__gitlab_backup_cmd__: "export {% if backup.skip|length > 0 %}SKIP={{ backup.skip | join(',')}} {% endif %}CRON=1 && gitlab-rake gitlab:backup:create{% if backup.autoremove %} && rm /var/opt/gitlab/backups/*.tar{% endif %}"

__gitlab_runners_clean_cmd__: "echo 'DELETE FROM ci_runners WHERE id IN ( SELECT id FROM ( SELECT id, ROW_NUMBER() OVER( PARTITION BY description ORDER BY id DESC ) AS row_num FROM ci_runners ) t WHERE t.row_num > 1 );' | su gitlab-psql -c '/opt/gitlab/embedded/bin/psql -h /var/opt/gitlab/postgresql -d gitlabhq_production' >/dev/null"

