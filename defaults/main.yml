---
# defaults file for egeneralov.gitlab


domain: gitlab.{{ ansible_default_ipv4.address }}.xip.io
registry_host: registry.{{ ansible_default_ipv4.address }}.xip.io
email: eduard@generalov.net
root_password: egeneralov
runners_token: Ru65oNWUzJQ17yh7YwzE
# gitlab_version: 11.11.0-ce.0
gitlab_revision: ce
gitlab_repository: "deb https://packages.gitlab.com/gitlab/gitlab-{{ gitlab_revision }}/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} main"
gitlab_key_url: "https://packages.gitlab.com/gitlab/gitlab-ee/gpgkey"
initial_license_file: ""

prometheus:
  enable: true
  listen_address: 127.0.0.1:9090
  exporters:
    gitlab_monitor: true
    prometheus_monitoring: true
    postgres_exporter: true


grafana:
  enable: true
  admin_password: Ru65oNWUzJQ17yh7YwzE
  allow_user_sign_up: false
  log_directory: /var/log/gitlab/grafana
  home: /var/opt/gitlab/grafana
  # gitlab_application_id: GITLAB_APPLICATION_ID
  # gitlab_secret: GITLAB_SECRET
  env_directory: /opt/gitlab/etc/grafana/env
  allowed_groups: []
  gitlab_auth_sign_up: true
  http_addr: 127.0.0.1
  http_port: 3000
  dashboards:
    - name: GitLab Omnibus
      orgId: 1
      folder: GitLab Omnibus
      type: file
      disableDeletion: true
      updateIntervalSeconds:
        options:
          path: /opt/gitlab/embedded/service/grafana-dashboards
  datasources:
    - name: GitLab Omnibus
      type: prometheus
      access: proxy
      url: http://127.0.0.1:9090



restore:
  enabled: false
#   from: /path/to/<timestamp>_gitlab_backup.tar
#   secrets: /path/to/gitlab-secrets.json
  force: false


ldap:
  enabled: false
  host: ldap.egeneralov.tk
  port: 389
  uid: uid
  bind_dn: 'uid=gitlabro,cn=users,cn=compat,dc=egeneralov,dc=tk'
  password: ''
  encryption: 'plain'
  verify_certificates: false
#   ca_file: '/etc/ipa/ca.crt'
  active_directory: false
  allow_username_or_email_login: true
  block_auto_created_users: false
  base: 'dc=egeneralov,dc=tk'
  user_filter: '(objectClass=inetorgperson)'


omniauth:
  enabled: false
  providers: []
#     - {
#       "name": "bitbucket",
#       "app_id": "",
#       "app_secret": "",
#       "url": "https://bitbucket.org/"
#     }


backup:
  enabled: false
  bucket: "egeneralov-gitlab-testing-backup"
  upload_connection: {}
#     provider: 'AWS',
#     region: 'ams3',
#     aws_access_key_id: '',
#     aws_secret_access_key: '',
#     endpoint: 'https://ams3.digitaloceanspaces.com'
  skip:
    - uploads
    - builds
    - artifacts
    - lfs
    - registry
  # weekly, daily, hourly
  schedule: daily
  autoremove: false


letsencrypt:
  enable: false
  contact_emails:
    - "{{ email }}"
  auto_renew: true
  auto_renew_hour: 0
  auto_renew_minute: 30
  auto_renew_day_of_month: "*/4"


nginx:
  enable: true
  client_max_body_size: 250m
#   redirect_http_to_https: false
#   redirect_http_to_https_port: 80
#   ssl_client_certificate: "/etc/gitlab/ssl/ca.crt"
#   ssl_verify_client: 'off'
#   ssl_verify_depth: '1'
#   ssl_ciphers: ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256
#   ssl_prefer_server_ciphers: 'on'
#   ssl_protocols: TLSv1.2 TLSv1.3
#   ssl_session_cache: builtin:1000  shared:SSL:10m
#   ssl_session_timeout: 5m
#   ssl_dhparam: 
#   listen_addresses:
#   - "*"
#   - "[::]"
#   hsts_max_age: 31536000
#   hsts_include_subdomains: false
#   referrer_policy: strict-origin-when-cross-origin
#   gzip_enabled: true
#   listen_port: 
#   listen_https: 
#   custom_gitlab_server_config: |
#     location ^~ /foo-namespace/bar-project/raw/ {
#      deny all;
#     }
#   custom_nginx_config: include /etc/nginx/conf.d/example.conf;
  proxy_read_timeout: 3600
  proxy_connect_timeout: 300
#   proxy_set_headers:
#     Host: "$http_host_with_default"
#     X-Real-IP: "$remote_addr"
#     X-Forwarded-For: "$proxy_add_x_forwarded_for"
#     X-Forwarded-Proto: https
#     X-Forwarded-Ssl: 'on'
#     Upgrade: "$http_upgrade"
#     Connection: "$connection_upgrade"
#   proxy_cache_path: proxy_cache keys_zone=gitlab:10m max_size=1g levels=1:2
#   proxy_cache: gitlab
#   http2_enabled: true
#   real_ip_trusted_addresses: []
#   real_ip_header: 
#   real_ip_recursive: 
#   custom_error_pages:
#     '404':
#       title: Example title
#       header: Example header
#       message: Example message
#   dir: "/var/opt/gitlab/nginx"
#   log_directory: "/var/log/gitlab/nginx"
#   worker_processes: 4
#   worker_connections: 10240
#   log_format: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent
#     "$http_referer" "$http_user_agent"
#   sendfile: 'on'
  tcp_nopush: 'on'
  tcp_nodelay: 'on'
  gzip: 'on'
  gzip_http_version: '1.0'
  gzip_comp_level: '2'
  gzip_proxied: any
#   gzip_types:
#   - text/plain
#   - text/css
#   - application/x-javascript
#   - text/xml
#   - application/xml
#   - application/xml+rss
#   - text/javascript
#   - application/json
  keepalive_timeout: 65
#   cache_max_size: 5000m
  server_names_hash_bucket_size: 64
#   request_buffering_off_path_regex: ".git/git-receive-pack$|.git/info/refs?service=git-receive-pack$|.git/gitlab-lfs/objects|.git/info/lfs/objects/batch$"
#   status:
#     enable: true
#     listen_addresses:
#     - 127.0.0.1
#     fqdn: dev.example.com
#     port: 9999
#     vts_enable: true
#     options:
#       stub_status: 'on'
#       server_tokens: 'off'
#       access_log: 'off'
#       allow: 127.0.0.1
#       deny: all


runners_clean: false
manage_iptables: false


custom_nginx:
  ssl:
    provider: selfsigned
    base_subj: "/C=NL/ST={{ domain }}/L={{ domain }}/O={{ domain }}/OU={{ domain }}"
    users:
      - egeneralov


__gitlab_backup_cmd__: "export {% if backup.skip|length > 0 %}SKIP={{ backup.skip | join(',')}} {% endif %}CRON=1 && gitlab-rake gitlab:backup:create{% if backup.autoremove %} && rm /var/opt/gitlab/backups/*.tar{% endif %}"

__gitlab_runners_clean_cmd__: "echo 'DELETE FROM ci_runners WHERE id IN ( SELECT id FROM ( SELECT id, ROW_NUMBER() OVER( PARTITION BY description ORDER BY id DESC ) AS row_num FROM ci_runners ) t WHERE t.row_num > 1 );' | su gitlab-psql -c '/opt/gitlab/embedded/bin/psql -h /var/opt/gitlab/postgresql -d gitlabhq_production' >/dev/null"

